#!/usr/bin/env python
# xss vulnerabilities testing. your can customize to test for generic vulnerabilities
import requests
import re
import urllib.parse as urlparse
from bs4 import BeautifulSoup


class Scanner:
    def __init__(self, url, ignore_links_list):
        self.session = requests.Session()
        self.target_url = url
        self.target_links = []
        self.ignore_links = ignore_links_list

    def extract_links(self, url):
        response = self.session.get(self.target_url)
        return re.findall('(?:href=")(.*?)"', response.content.decode(errors="ignore"))

    print("\n[+] ----- Discovered valid links and directories -----\n")

    def crawl(self, url=None):
        if url is None:
            url = self.target_url
        href_links = self.extract_links(url)
        try:
            for link in href_links:
                link = urlparse.urljoin(url, link)

                if "#" in link:
                    link = link.split("#")[0]

                if self.target_url in link and link not in self.target_links and link not in self.ignore_links:
                    self.target_links.append(link)
                    print(str(link))
                    self.crawl(link)
        except KeyboardInterrupt:
            exit()

    def extract_forms(self, url):
        response = self.session.get(url)
        parsed_html = BeautifulSoup(response.content, features="lxml")
        return parsed_html.findAll("form")

    def submit_form(self, form, value, url):
        action = form.get("action")
        post_url = urlparse.urljoin(url, action)
        method = form.get("method")

        inputs_list = form.findAll("input")
        post_data_dict = {}

        for f_input in inputs_list:
            input_name = f_input.get("name")
            input_type = f_input.get("type")
            input_value = f_input.get("value")
            if input_type == "text":
                input_value = value
            post_data_dict[input_name] = input_value
        if method == "post":
            return self.session.post(post_url, data=post_data_dict)
        return self.session.get(post_url, params=post_data_dict)

    def run_scanner(self):
        for link in self.target_links:
            forms = self.extract_forms(link)
            for form in forms:
                print("[+] Testing form in > " + link)
                vulnerable_to_xss = self.test_xss_in_form(form, link)
                if vulnerable_to_xss:
                    print("\n[***] XSS discovered in > " + link + " in the following form")
                    print("\n" + form)

            if "=" in link:
                print("\n\n[+] Testing > " + link)
                vulnerable_to_xss = self.test_xss_in_link(link)
                if vulnerable_to_xss:
                    print("[***] Discovered XSS in > " + link)

    def test_xss_in_link(self, url):
        xss_test_script = "<sCript>alert('found xss vulnerability')</sCriPt>"
        url = url.replace("=", "=" + xss_test_script)
        response = self.session.get(url)
        return xss_test_script.encode() in response.content

    def test_xss_in_form(self, form, url):
        xss_test_script = "<sCript>alert('found xss vulnerability')</sCriPt>"  # upper-case letters to avoid detection
        response = self.submit_form(form, xss_test_script, url)
        return xss_test_script.encode() in response.content
